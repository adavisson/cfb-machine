{"version":3,"sources":["components/NavBar.js","components/Home.js","components/MatchupResults.js","components/MatchHistory.js","components/TeamStatsResults.js","components/TeamStats.js","components/RosterResults.js","components/Roster.js","components/About.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","Navbar","sticky","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","inline","Home","MatchupResults","props","useState","matchup","setMatchup","loaded","setLoaded","useEffect","a","async","fetch","team1","team2","result","json","data","fetchData","team1Wins","team2Wins","ties","games","map","game","season","winner","awayTeam","awayScore","homeScore","homeTeam","venue","console","log","MatchHistory","teams","setTeams","setTeam1","setTeam2","isSubmitted","setIsSubmitted","school","handleChange1","e","target","value","handleChange2","handleSubmit","preventDefault","handleClick","Form","onSubmit","Group","controlId","Label","Control","as","onChange","team","key","mascot","Button","variant","type","onClick","TeamStatsResults","stats","setStats","year","stat","string","replace","charAt","toUpperCase","slice","convertCase","statName","statValue","TeamStats","setTeam","setYear","years","setYears","date","Date","yearArr","i","getFullYear","push","handleChangeTeam","handleChangeYear","varian","RosterResults","roster","setRoster","player","jersey","first_name","last_name","position","height","weight","home_city","home_state","home_country","Roster","About","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4XAuBeA,EApBA,WACb,OACE,kBAACC,EAAA,EAAD,CAAQC,OAAO,MAAMC,OAAO,MAC1B,kBAACF,EAAA,EAAOG,MAAR,CAAcC,KAAK,KAAnB,eACA,kBAACJ,EAAA,EAAOK,OAAR,CAAeC,gBAAc,qBAC7B,kBAACN,EAAA,EAAOO,SAAR,CAAiBC,GAAG,oBAClB,kBAACC,EAAA,EAAD,CAAKC,UAAU,WACb,kBAACD,EAAA,EAAIE,KAAL,CAAUP,KAAK,kBAAf,iBACA,kBAACK,EAAA,EAAIE,KAAL,CAAUP,KAAK,eAAf,cACA,kBAACK,EAAA,EAAIE,KAAL,CAAUP,KAAK,YAAf,WACA,kBAACK,EAAA,EAAIE,KAAL,CAAUP,KAAK,UAAf,UAEF,kBAACK,EAAA,EAAD,CAAKG,QAAM,GACT,kBAACH,EAAA,EAAIE,KAAL,CAAUP,KAAK,4BAAf,gCCHKS,EAXF,WACX,OACE,yBAAKH,UAAU,kBACb,2CACA,yH,yCC+BSI,EAnCQ,SAACC,GAAW,IAAD,EACFC,mBAAS,IADP,mBACzBC,EADyB,KAChBC,EADgB,OAEJF,oBAAS,GAFL,mBAEzBG,EAFyB,KAEjBC,EAFiB,KAchC,OAVAC,qBAAU,YACU,qBAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACKE,MAAM,2DAAD,OAA4DT,EAAMU,MAAlE,kBAAiFV,EAAMW,SADjG,cACVC,EADU,kBAAAL,EAAA,MAEGK,EAAOC,QAFV,OAEVC,EAFU,OAGhBX,EAAWW,GACXT,GAAU,GAJM,qCAMlBU,KACC,IAGD,yBAAKpB,UAAU,YACb,uCACA,uCAAaK,EAAMU,MAAnB,KAA4BR,EAAQc,WACpC,uCAAahB,EAAMW,MAAnB,KAA4BT,EAAQe,WACpC,oCAAUf,EAAQgB,QACfd,GAAUF,EAAQiB,MAAMC,KAAI,SAAAC,GAC7B,OACE,yBAAK1B,UAAU,QACb,4BAAK0B,EAAKC,QACV,sCAAYD,EAAKE,QACjB,qCAAWF,EAAKG,SAAhB,IAA2BH,EAAKI,UAAhC,MAA8CJ,EAAKK,UAAnD,IAA+DL,EAAKM,UACpE,qCAAWN,EAAKO,MAAQP,EAAKO,MAAQ,WAI1CC,QAAQC,IAAI5B,EAAQiB,SCmDZY,EA/EM,WAAO,IAAD,EACC9B,mBAAS,IADV,mBAClB+B,EADkB,KACXC,EADW,OAEChC,mBAAS,IAFV,mBAElBS,EAFkB,KAEXwB,EAFW,OAGCjC,mBAAS,IAHV,mBAGlBU,EAHkB,KAGXwB,EAHW,OAIalC,oBAAS,GAJtB,mBAIlBmC,EAJkB,KAILC,EAJK,KAMzB/B,qBAAU,YACU,qBAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACKE,MAAM,kDADX,cACVG,EADU,kBAAAL,EAAA,MAEGK,EAAOC,QAFV,OAEVC,EAFU,OAGhBmB,EAASnB,GACToB,EAASpB,EAAK,GAAGwB,QACjBH,EAASrB,EAAK,GAAGwB,QALD,qCAOlBvB,KACC,IAEH,IAAMwB,EAAgB,SAACC,GACrBN,EAASM,EAAEC,OAAOC,QAGdC,EAAgB,SAACH,GACrBL,EAASK,EAAEC,OAAOC,QAGdE,EAAe,SAACJ,GACpBA,EAAEK,iBACFR,GAAe,IA6BXS,EAAc,WAClBT,GAAe,IAYjB,OACE,yBAAK1C,UAAU,2BACb,8CACEyC,GAAe,wHACfA,GAzCF,kBAACW,EAAA,EAAD,CAAMC,SAAUJ,GACd,kBAACG,EAAA,EAAKE,MAAN,CAAYC,UAAU,uBACpB,kBAACH,EAAA,EAAKI,MAAN,mBACA,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,GAAG,SAASX,MAAOhC,EAAO4C,SAAUf,GAC/CP,EAAMZ,KAAI,SAAAmC,GACT,OAAQ,4BAAQC,IAAK,KAAOD,EAAK9D,GAAIiD,MAAOa,EAAKjB,QAASiB,EAAKjB,OAAvD,IAAgEiB,EAAKE,aAInF,kBAACV,EAAA,EAAKE,MAAN,CAAYC,UAAU,uBACpB,kBAACH,EAAA,EAAKI,MAAN,oBACA,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,GAAG,SAASX,MAAO/B,EAAO2C,SAAUX,GAC/CX,EAAMZ,KAAI,SAAAmC,GACT,OAAQ,4BAAQC,IAAK,KAAOD,EAAK9D,GAAIiD,MAAOa,EAAKjB,QAASiB,EAAKjB,OAAvD,IAAgEiB,EAAKE,aAInF,kBAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUC,KAAK,UAA/B,WAyBDxB,GAZD,oCACE,kBAACsB,EAAA,EAAD,CAAQG,QAASf,GAAjB,gBACA,kBAAC,EAAD,CAAgBpC,MAAOA,EAAOC,MAAOA,OCnC9BmD,G,OA/BU,SAAC9D,GAAW,IAAD,EACRC,mBAAS,IADD,mBAC3B8D,EAD2B,KACpBC,EADoB,OAEN/D,oBAAS,GAFH,mBAE3BG,EAF2B,KAEnBC,EAFmB,KAIlCC,qBAAU,YACU,qBAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACKE,MAAM,yDAAD,OAA0DT,EAAMiE,KAAhE,iBAA6EjE,EAAMuD,QAD7F,cACV3C,EADU,kBAAAL,EAAA,MAEGK,EAAOC,QAFV,OAEVC,EAFU,OAGhBkD,EAASlD,GACTT,GAAU,GAJM,qCAMlBU,KACA,IAOF,OACE,yBAAKpB,UAAU,sBACb,4BAAKK,EAAMiE,KAAX,cAA4BjE,EAAMuD,MAClC,yBAAK5D,UAAU,WACVS,GAAU2D,EAAM3C,KAAI,SAAA8C,GACrB,OAAO,2BAVK,SAACC,GACnB,IAAMvD,EAASuD,EAAOC,QAAS,WAAY,OAC3C,OAAOxD,EAAOyD,OAAO,GAAGC,cAAgB1D,EAAO2D,MAAM,GAQpCC,CAAYN,EAAKO,UAArB,KAAkCP,EAAKQ,kBC+DzCC,EApFG,WAAO,IAAD,EACE1E,mBAAS,IADX,mBACfsD,EADe,KACTqB,EADS,OAEE3E,mBAAS,MAFX,mBAEfgE,EAFe,KAETY,EAFS,OAGI5E,mBAAS,IAHb,mBAGf+B,EAHe,KAGRC,EAHQ,OAIgBhC,oBAAS,GAJzB,mBAIfmC,EAJe,KAIFC,EAJE,OAKIpC,mBAAS,IALb,mBAKf6E,EALe,KAKRC,EALQ,KAOtBzE,qBAAU,YACU,qBAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACKE,MAAM,kDADX,cACVG,EADU,kBAAAL,EAAA,MAEGK,EAAOC,QAFV,OAEVC,EAFU,OAGhBmB,EAASnB,GACT8D,EAAQ9D,EAAK,GAAGwB,QAJA,qCAMlBvB,GAGA,IAFA,IAAMiE,EAAO,IAAIC,KACXC,EAAU,GACNC,EAAI,KAAMA,GAAKH,EAAKI,cAAeD,IAC3CD,EAAQG,KAAKF,GAEfJ,EAASG,KACR,IAEH,IAAMI,EAAmB,SAAC9C,GACxBoC,EAAQpC,EAAEC,OAAOC,QAGb6C,EAAmB,SAAC/C,GACxBqC,EAAQrC,EAAEC,OAAOC,QAGbE,EAAe,SAACJ,GACpBA,EAAEK,iBACFR,GAAe,IAGXS,EAAc,WAClBT,GAAe,IAsCjB,OACE,yBAAK1C,UAAU,wBACb,2CACEyC,GApCF,kBAACW,EAAA,EAAD,CAAMC,SAAUJ,GACd,kBAACG,EAAA,EAAKE,MAAN,CAAYC,UAAU,sBACpB,kBAACH,EAAA,EAAKI,MAAN,aACA,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,GAAG,SAASX,MAAOa,EAAMD,SAAUgC,GAC9CtD,EAAMZ,KAAI,SAAAmC,GACT,OAAQ,4BAAQC,IAAK,KAAOD,EAAK9D,GAAIiD,MAAOa,EAAKjB,QAASiB,EAAKjB,OAAvD,IAAgEiB,EAAKE,aAInF,kBAACV,EAAA,EAAKE,MAAN,CAAYC,UAAU,sBACpB,kBAACH,EAAA,EAAKI,MAAN,aACA,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,GAAG,SAASX,MAAOuB,EAAMX,SAAUiC,GAC9CT,EAAM1D,KAAI,SAAA6C,GACT,OAAO,4BAAQvB,MAAOuB,GAAOA,QAInC,kBAACP,EAAA,EAAD,CAAQ8B,OAAO,UAAU5B,KAAK,UAA9B,WAoBDxB,GAXD,oCACE,kBAACsB,EAAA,EAAD,CAAQG,QAASf,GAAjB,kBACA,kBAAC,EAAD,CAAkBS,KAAMA,EAAMU,KAAMA,OC3C7BwB,EA9BO,SAACzF,GAAW,IAAD,EACJC,mBAAS,IADL,mBACxByF,EADwB,KACjBC,EADiB,KAa/B,OAVArF,qBAAU,YACU,qBAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACKE,MAAM,mDAAD,OAAoDT,EAAMuD,QADpE,cACV3C,EADU,kBAAAL,EAAA,MAEGK,EAAOC,QAFV,OAEVC,EAFU,OAGhB6E,EAAU7E,GAHM,qCAMlBC,KACA,IAGA,yBAAKpB,UAAU,kBACZ+F,EAAOtE,KAAI,SAAAwE,GACV,OACE,yBAAKjG,UAAU,UACb,gCAAMiG,EAAOC,OAAb,IAAsBD,EAAOE,WAA7B,IAA0CF,EAAOG,WACjD,wCAAcH,EAAOI,UACrB,sCAAYJ,EAAOK,OAAnB,KACA,sCAAYL,EAAOM,OAAnB,SACA,wCAAcN,EAAOO,UAArB,KAAkCP,EAAOQ,WAAzC,KAAuDR,EAAOS,oBC4C3DC,EAhEA,WAAO,IAAD,EACOrG,mBAAS,IADhB,mBACZ+B,EADY,KACLC,EADK,OAEKhC,mBAAS,IAFd,mBAEZsD,EAFY,KAENqB,EAFM,OAGmB3E,oBAAS,GAH5B,mBAGZmC,EAHY,KAGCC,EAHD,KAKnB/B,qBAAU,YACU,qBAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACKE,MAAM,kDADX,cACVG,EADU,kBAAAL,EAAA,MAEGK,EAAOC,QAFV,OAEVC,EAFU,OAGhBmB,EAASnB,GACT8D,EAAQ9D,EAAK,GAAGwB,QAJA,qCAMlBvB,KACA,IAEF,IAAMuE,EAAmB,SAAC9C,GACxBoC,EAAQpC,EAAEC,OAAOC,QAGbE,EAAe,SAACJ,GACpBA,EAAEK,iBACFR,GAAe,IAGXS,EAAc,WAClBT,GAAe,IA8BjB,OACE,yBAAK1C,UAAU,aACb,wCACEyC,GA5BF,kBAACW,EAAA,EAAD,CAAMC,SAAUJ,GACd,kBAACG,EAAA,EAAKE,MAAN,CAAYC,UAAU,sBACpB,kBAACH,EAAA,EAAKI,MAAN,aACA,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,GAAG,SAASX,MAAOa,EAAMD,SAAUgC,GAC9CtD,EAAMZ,KAAI,SAAAmC,GACT,OAAQ,4BAAQC,IAAK,KAAOD,EAAK9D,GAAIiD,MAAOa,EAAKjB,QAASiB,EAAKjB,OAAvD,IAAgEiB,EAAKE,aAInF,kBAACC,EAAA,EAAD,CAAQ8B,OAAO,UAAU5B,KAAK,UAA9B,WAoBDxB,GAXD,oCACE,kBAACsB,EAAA,EAAD,CAAQG,QAASf,GAAjB,eACA,kBAAC,EAAD,CAAeS,KAAMA,OC3CdgD,EATD,WACZ,OACE,yBAAK5G,UAAU,mBACb,qCACA,2BAAG,kEAAuC,uBAAGN,KAAK,wCAAR,gCAAvC,QCsBMmH,MAff,WACE,OACE,kBAAC,IAAD,KACE,yBAAK7G,UAAU,OACf,kBAAC,EAAD,MACE,kBAAC,IAAD,CAAO8G,OAAK,EAACC,KAAK,IAAIC,UAAW7G,IACjC,kBAAC,IAAD,CAAO4G,KAAK,iBAAiBC,UAAW5E,IACxC,kBAAC,IAAD,CAAO2E,KAAK,cAAcC,UAAWhC,IACrC,kBAAC,IAAD,CAAO+B,KAAK,WAAWC,UAAWL,IAClC,kBAAC,IAAD,CAAOI,KAAK,SAASC,UAAWJ,OCVpBK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.d3f6fdde.chunk.js","sourcesContent":["import React from 'react';\nimport {Navbar, Nav} from 'react-bootstrap';\n\nconst NavBar = () => {\n  return (\n    <Navbar sticky=\"top\" expand=\"lg\">\n      <Navbar.Brand href=\"/\">CFB Machine</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"/match-history\">Match History</Nav.Link>\n          <Nav.Link href=\"/team-stats\">Team Stats</Nav.Link>\n          <Nav.Link href=\"/rosters\">Rosters</Nav.Link>\n          <Nav.Link href=\"/about\">About</Nav.Link>\n        </Nav>\n        <Nav inline>\n          <Nav.Link href=\"https://andydavisson.com\">Back to andydavisson.com</Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n \nexport default NavBar;","import React from 'react';\n\nconst Home = () => {\n  return (\n    <div className=\"home container\">\n      <h1>CFB Machine</h1>\n      <p>\n        Welcome to the CFB Machine. Explore this site to find historical college football stats.\n      </p>\n    </div>\n  );\n}\n \nexport default Home;","import React, { useState, useEffect } from 'react';\n\nconst MatchupResults = (props) => {\n  const [matchup, setMatchup] = useState({});\n  const [loaded, setLoaded] = useState(false);\n  \n  useEffect(() => {\n    const fetchData = async() => {\n      const result = await fetch(`https://api.collegefootballdata.com/teams/matchup?team1=${props.team1}&team2=${props.team2}`)\n      const data = await result.json();\n      setMatchup(data);\n      setLoaded(true);\n    }\n    fetchData();\n  }, [])\n\n  return (\n    <div className=\"matchups\">\n      <h3>Results</h3>\n      <p>Wins for {props.team1}: {matchup.team1Wins}</p>\n      <p>Wins for {props.team2}: {matchup.team2Wins}</p>\n      <p>Ties: {matchup.ties}</p>\n      {!!loaded && matchup.games.map(game => {\n        return(\n          <div className=\"game\">\n            <h5>{game.season}</h5>\n            <p>Winner: {game.winner}</p>\n            <p>Score: {game.awayTeam} {game.awayScore} - {game.homeScore} {game.homeTeam}</p>\n            <p>Venue: {game.venue ? game.venue : 'N/A'}</p>\n          </div>\n        )\n      })}\n      {console.log(matchup.games)}\n    </div>\n  );\n}\n \nexport default MatchupResults;","import React, { useState, useEffect } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport MatchupResults from './MatchupResults';\n\nconst MatchHistory = () => {\n  const [teams, setTeams] = useState([]);\n  const [team1, setTeam1] = useState('');\n  const [team2, setTeam2] = useState('');\n  const [isSubmitted, setIsSubmitted] = useState(false);\n    \n  useEffect(() => {\n    const fetchData = async() => {\n      const result = await fetch('https://api.collegefootballdata.com/teams/fbs');\n      const data = await result.json();\n      setTeams(data);\n      setTeam1(data[0].school);\n      setTeam2(data[0].school);\n    }\n    fetchData();\n  }, []);\n\n  const handleChange1 = (e) => {\n    setTeam1(e.target.value);\n  }\n\n  const handleChange2 = (e) => {\n    setTeam2(e.target.value);\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setIsSubmitted(true);\n  }\n\n  const rendferForm = () => {\n    return (\n      <Form onSubmit={handleSubmit}>\n        <Form.Group controlId=\"team.ControlSelect1\">\n          <Form.Label>First Team</Form.Label>\n          <Form.Control as=\"select\" value={team1} onChange={handleChange1}>\n            {teams.map(team => {\n              return (<option key={'1_' + team.id} value={team.school}>{team.school} {team.mascot}</option>)\n            })}\n          </Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"team.ControlSelect2\">\n          <Form.Label>Second Team</Form.Label>\n          <Form.Control as=\"select\" value={team2} onChange={handleChange2}>\n            {teams.map(team => {\n              return (<option key={'2_' + team.id} value={team.school}>{team.school} {team.mascot}</option>)\n            })}\n          </Form.Control>\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">\n          Submit\n        </Button> \n      </Form>\n    )\n  }\n\n  const handleClick = () => {\n    setIsSubmitted(false);\n  }\n\n  const renderResults = () => {\n    return (\n      <>\n        <Button onClick={handleClick}>Change Teams</Button>\n        <MatchupResults team1={team1} team2={team2} />\n      </>\n    )\n  }\n\n  return (\n    <div className=\"match-history container\">\n      <h1>Match History</h1>\n      {!isSubmitted && <p>Select two teams to see results of all of the games they have played against each other.</p>}\n      {!isSubmitted && rendferForm()}\n      {isSubmitted && renderResults()}\n    </div>\n  );\n}\n \nexport default MatchHistory;","import React, {useState, useEffect} from 'react';\n\nconst TeamStatsResults = (props) => {\n  const [stats, setStats] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async() => {\n      const result = await fetch(`https://api.collegefootballdata.com/stats/season?year=${props.year}&team=${props.team}`)\n      const data = await result.json();\n      setStats(data);\n      setLoaded(true);\n    }\n    fetchData();\n  },[])\n\n  const convertCase = (string) => {\n    const result = string.replace( /([A-Z])/g, \" $1\" );\n    return result.charAt(0).toUpperCase() + result.slice(1);\n  }\n\n  return (\n    <div className=\"team-stats-results\">\n      <h3>{props.year} Stats for {props.team}</h3>\n      <div className=\"stats\">\n        {!!loaded && stats.map(stat => {\n          return(<p>{convertCase(stat.statName)}: {stat.statValue}</p>);\n        })}\n      </div>\n    </div>\n  );\n}\n \nexport default TeamStatsResults;","import React, {useState, useEffect } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { generateKeyPairSync } from 'crypto';\nimport TeamStatsResults from './TeamStatsResults';\n\nconst TeamStats = () => {\n  const [team, setTeam] = useState('');\n  const [year, setYear] = useState(2019); \n  const [teams, setTeams] = useState([]);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [years, setYears] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await fetch('https://api.collegefootballdata.com/teams/fbs');\n      const data = await result.json();\n      setTeams(data);\n      setTeam(data[0].school);\n    }\n    fetchData();\n    const date = new Date();\n    const yearArr = [];\n    for ( let i = 1900; i <= date.getFullYear(); i++){\n      yearArr.push(i);\n    }\n    setYears(yearArr);\n  }, [])\n\n  const handleChangeTeam = (e) => {\n    setTeam(e.target.value);\n  }\n\n  const handleChangeYear = (e) => {\n    setYear(e.target.value);\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setIsSubmitted(true);\n  }\n\n  const handleClick = () => {\n    setIsSubmitted(false);\n  }\n\n  const renderForm = () => {\n    return (\n      <Form onSubmit={handleSubmit}>\n        <Form.Group controlId=\"team.ControlSelect\">\n          <Form.Label>Team</Form.Label>\n          <Form.Control as=\"select\" value={team} onChange={handleChangeTeam}>\n            {teams.map(team => {\n              return (<option key={'1_' + team.id} value={team.school}>{team.school} {team.mascot}</option>)\n            })}\n          </Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"year.ControlSelect\">\n          <Form.Label>Year</Form.Label>\n          <Form.Control as=\"select\" value={year} onChange={handleChangeYear}>\n            {years.map(year => {\n              return(<option value={year}>{year}</option>)\n            })}\n          </Form.Control>\n        </Form.Group>\n        <Button varian=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </Form>\n    )\n  }\n\n  const renderResults = () => {\n    return (\n      <>\n        <Button onClick={handleClick}>Edit Team/Year</Button>\n        <TeamStatsResults team={team} year={year} />\n      </>\n    )\n  }\n\n  return (\n    <div className=\"team-stats container\">\n      <h1>Team Stats</h1>\n      {!isSubmitted && renderForm()}\n      {isSubmitted && renderResults()}\n    </div>\n  );\n}\n \nexport default TeamStats;","import React, { useState,useEffect } from 'react';\n\nconst RosterResults = (props) => {\n  const [roster,setRoster] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await fetch(`https://api.collegefootballdata.com/roster?team=${props.team}`)\n      const data = await result.json();\n      setRoster(data);\n    }\n\n    fetchData();\n  },[]);\n\n  return (\n    <div className=\"roster-results\">\n      {roster.map(player => {\n        return(\n          <div className=\"player\">\n            <h5>#{player.jersey} {player.first_name} {player.last_name}</h5>\n            <p>Position: {player.position}</p>\n            <p>Height: {player.height}\"</p>\n            <p>Weight: {player.weight} lbs.</p>\n            <p>Hometown: {player.home_city}, {player.home_state}, {player.home_country}</p>\n          </div>\n        )\n      })}\n    </div>\n  );\n}\n \nexport default RosterResults;","import React, {useState, useEffect} from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport RosterResults from './RosterResults';\n\nconst Roster = () => {\n  const [teams, setTeams] = useState([]);\n  const [team, setTeam] = useState('');\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await fetch('https://api.collegefootballdata.com/teams/fbs');\n      const data = await result.json();\n      setTeams(data);\n      setTeam(data[0].school);\n    }\n    fetchData();\n  },[]);\n\n  const handleChangeTeam = (e) => {\n    setTeam(e.target.value);\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setIsSubmitted(true);\n  }\n\n  const handleClick = () => {\n    setIsSubmitted(false);\n  }\n\n  const renderForm = () => {\n    return (\n      <Form onSubmit={handleSubmit}>\n        <Form.Group controlId=\"team.ControlSelect\">\n          <Form.Label>Team</Form.Label>\n          <Form.Control as=\"select\" value={team} onChange={handleChangeTeam}>\n            {teams.map(team => {\n              return (<option key={'1_' + team.id} value={team.school}>{team.school} {team.mascot}</option>)\n            })}\n          </Form.Control>\n        </Form.Group>\n        <Button varian=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </Form>\n    )\n  }\n\n  const renderRoster = () => {\n    return (\n      <>\n        <Button onClick={handleClick}>Change Team</Button>\n        <RosterResults team={team}/>\n      </>\n    )\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>Rosters</h1>\n      {!isSubmitted && renderForm()}\n      {isSubmitted && renderRoster()}\n    </div>\n  );\n}\n \nexport default Roster;","import React from 'react';\n\nconst About = () => {\n  return (\n    <div className=\"about container\">\n      <h1>About</h1>\n      <p><em>This page is pulling all data from <a href=\"https://api.collegefootballdata.com/\">api.collegefootballdata.com/</a>.</em></p>\n    </div>\n  );\n}\n \nexport default About;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route\n} from 'react-router-dom';\nimport './App.css';\nimport NavBar from './components/NavBar';\nimport Home from './components/Home';\nimport MatchHistory from './components/MatchHistory';\nimport TeamStats from './components/TeamStats';\nimport Roster from './components/Roster';\nimport About from './components/About';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n      <NavBar />\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/match-history\" component={MatchHistory} />\n        <Route path=\"/team-stats\" component={TeamStats} />\n        <Route path=\"/rosters\" component={Roster} />\n        <Route path=\"/about\" component={About} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}